from api import ApiController
from bot_types import AvailableLanguages


class Departments:
    deps: dict | None

    def __init__(self, api: ApiController):
        deps = api.departments()
        self.deps = deps['response']['data'] if deps['status'] == 200 else None

    def __repr__(self):
        d_list = ''
        if self.deps is None:
            return '\n<i>–æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</i>\n'
        for line in self.deps:
            if '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å' in line['name']:
                d_list += f'<b>{line["name"]}:</b>\n'
                d_list += f'<b><i>{line["leader"]}</i></b>\n\n'
                d_list += f'<i>{line["description"]}</i>\n\n'
            else:
                d_list += f'<b>{line["name"]}: </b>\n'
                d_list += f'<i>{line["description"]}</i>\n'
                d_list += '\n'
                d_list += f'–ì–ª–∞–≤–∞: {line["leader"]}\n'
            d_list += f'–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å: {line["deputy"]}\n' if line['deputy'] != '-' else ''
            d_list += f'–°–µ–∫—Ä–µ—Ç–∞—Ä—å: {line["secretary"]}\n' if line['secretary'] != '-' else ''
            d_list += '\n'
            d_list += f'–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: @{line["contact_tg"]}\n\n'
        return d_list


class BotStrings:
    hello: str
    test: str
    main: str
    appeal: str
    inform: str
    inform_resources: str
    resources_channels: str
    resources_ibi_s_it: str
    inform_class: str
    subscribe: str
    ss_info: str
    get_question_name: str
    get_question_group: str
    get_question_text: str
    question_submit_success: str
    question_submit_bad: str

    __strings: dict[AvailableLanguages, dict[str, str]] = {
        'en': {
            'hello': '<b>Hello</b>, world!',
            'test': 'This is a <i>test</i> message',
        },
        'ru': {
            'hello': '<b>–ü—Ä–∏–≤–µ—Ç</b>, –º–∏—Ä!',
            'test': '–≠—Ç–æ <i>—Ç–µ—Å—Ç–æ–≤–æ–µ</i> —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'main': 'üéì <b>–î–æ—Ä–æ–≥–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—ã!</b> üéì \n'
                    '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –ú–ë–ò! –ù–∞—à–∞ —Ü–µ–ª—å - —Å–æ–∑–¥–∞—Ç—å –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ–µ '
                    '–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –∏–∑ –≤–∞—Å –º–æ–∂–µ—Ç —Ä–∞—Å—Ü–≤–µ—Å—Ç–∏ –∏ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. '
                    '–ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—Å –∏ —Å–ª—É—à–∞—Ç—å –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, –∏–¥–µ–∏ –∏ –∑–∞–±–æ—Ç—ã.\n'
                    '\n'
                    'ü§ù <b><i>–ö–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å –≤–∞–º:</i></b>'
                    '\n'
                    '1. <i>–û—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —É—á–µ–±–µ.</i>\n'
                    '2. <i>–ü–æ–º–æ–∂–µ–º —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤–æ–∑–Ω–∏–∫—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.</i>\n'
                    '3. <i>–ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.</i>\n'
                    '\n'
                    '–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º! –ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–µ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ '
                    '–Ω–µ–∑–∞–±–≤–µ–Ω–Ω—ã–º –∏ —É—Å–ø–µ—à–Ω—ã–º. –ü—É—Å—Ç—å —ç—Ç–æ—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–π –≥–æ–¥ –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω '
                    '—è—Ä–∫–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –∏ –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏! \n'
                    '\n'
                    '–° –ª—é–±–æ–≤—å—é –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π,\n'
                    '–ë–æ—Ç –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –°–æ–≤–µ—Ç–∞ –ú–ë–ò üìò‚ú®',
            'ss_info': '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –ú–ë–ò \n'
                       '\n'
                       '–ö–ª—é—á–µ–≤—ã–µ –ª–∏—Ü–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞: \n'
                       '‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n'
                       '<i>placeholder</i>'
                       '–ù–æ —Å–ø–µ—à–∏–º –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞, –∞ –ø–∏—Å–∞—Ç—å –∏–º '
                       '–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –∏ –∫—Ä–∞–π–Ω–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.',
            'appeal': '<b>–í–æ–ø—Ä–æ—Å —Å—Ç—É–¥—Å–æ–≤–µ—Ç—É</b>\n'
                      '\n'
                      '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –µ–≥–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.\n'
                      '–ú—ã –∑–¥–µ—Å—å —á—Ç–æ–± –≤–∞–º –ø–æ–º–æ—á—å!',
            'inform': '<b>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</b>\n'
                      '\n'
                      '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ—á—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, '
                      '–∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ú–ë–ò',
            'inform_resources': '<b>–°—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</b>\n'
                                '\n'
                                '<i><b>–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è:</b>\n'
                                '–°–∞–π—Ç –ú–ë–ò\n'
                                '–ö–∞–Ω–∞–ª—ã –≤ —Å–æ—Ü. —Å–µ—Ç—è—Ö\n'
                                '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –±–æ—Ç—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\n'
                                '–ü—Ä–æ—á–∏–µ —Å—Å—ã–ª–∫–∏..</i>',
            'resources_channels': '<b>–°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã –æ—Ç –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞:</b>\n'
                                  '\n'
                                  'sth',
            'resources_ibi_s_it': '<b>–°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã –æ—Ç —Å—Ç—É–¥—Å–æ–≤–µ—Ç–∞:</b>\n'
                                  '\n'
                                  '<a href="https://apps.apple.com/ru/app/ibi-lounge/id6459472308">IBI Lounge IOS</a>\n'
                                  '<a href="https://t.me/ibi_rasp_bot">–ë–æ—Ç –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</a>\n'
                                  '<a href="https://t.me/ibi_decanat_bot">–ë–æ—Ç –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—É</a>\n'
                                  '<a href="https://t.me/ibi_sc_bot">–ë–æ—Ç –°—Ç—É–¥—Å–æ–≤–µ—Ç–∞</a>',
            'inform_class': '–ø—Ä–æ—Ö–æ–¥ –∫ –∞—É–¥–∏—Ç–æ—Ä–∏—è–º..',
            'subscribe': '–ø–æ–¥–ø–∏—Å–∫–∏... –¥–∞, —è –∑–∞–µ–±–∞–ª—Å—è –∫–∞—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç—ã',
            'get_question_name': '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?',
            'get_question_group': '–ò–∑ –∫–∞–∫–æ–π –≤—ã –≥—Ä—É–ø–ø—ã?',
            'get_question_text': '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:',
            'question_submit_success': '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.',
            'question_submit_bad': '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—Ä–∞—â–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        },
    }

    def __init__(self, api: ApiController, lang: AvailableLanguages = 'ru'):
        self.api = api
        self.lang = lang
        self.load_strings()

    def load_strings(self):
        for i in self.__strings[self.lang]:
            setattr(self, i, self.__strings[self.lang][i])
        deps = Departments(self.api)
        self.ss_info = self.ss_info.replace('<i>placeholder</i>', str(deps))

    def __repr__(self):
        return f'<BotStrings lang={self.lang}>'


ClassList = {
    '–ú–°': [
        '10', '12',
        '22', '24',
        '31', '32', '33', '34',
        '42', '43', '44', '45',
        '51', '52', '53', '54', '58'
    ],
    '–ù': [
        '425', '430'
    ]
}

MarkupPages = {
    '0': 'main',
    '1': 'appeal',
    '2': 'inform',
    '2-1': 'inform_resources',
    '2-1-1': 'resources_channels',
    '2-1-2': 'resources_ibi_s_it',
    '2-2': 'inform_class',
    '3': 'subscribe',
    '4': 'ss_info'
}

BackPages = {
    '1': '0',
    '2': '0',
    '2-1': '2',
    '2-1-1': '2-1',
    '2-1-2': '2-1',
    '2-2': '2',
    '3': '0',
    '4': '0'

}


if __name__ == '__main__':
    strings = BotStrings()
    print(strings.hello)
    print(strings.test)
    print(strings)
